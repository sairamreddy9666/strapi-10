name: Deploy Strapi on ECS Fargate via Terraform

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init -input=false

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        run: |
          terraform plan -out=tfplan -input=false \
            -var "image_uri=${{ secrets.ECR_REPOSITORY }}" \
            -var "db_password=${{ secrets.POSTGRES_PASSWORD }}"

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan

      # ✅ Register new ECS Task Definition
      - name: Register ECS Task Definition
        id: register_task
        run: |
          TASK_ARN=$(aws ecs register-task-definition \
            --family sairam-ecs-task \
            --execution-role-arn arn:aws:iam::242201300764:role/ecsTaskExecutionRole \
            --network-mode awsvpc \
            --requires-compatibilities FARGATE \
            --cpu "512" \
            --memory "1024" \
            --container-definitions '[{
              "name": "strapi-container",
              "image": "${{ secrets.ECR_REPOSITORY }}",
              "portMappings": [{"containerPort": 1337, "protocol": "tcp"}]
            }]' \
            --query 'taskDefinition.taskDefinitionArn' --output text)
          echo "TASK_ARN=$TASK_ARN" >> $GITHUB_ENV

      # ✅ Prepare AppSpec File
      - name: Generate appspec.json
        run: |
          sed "s|TASK_DEF_ARN|$TASK_ARN|g" appspec-template.json > appspec.json
          cat appspec.json

      # ✅ Trigger Blue/Green Deployment
      - name: Create CodeDeploy Deployment
        run: |
          aws deploy create-deployment \
            --application-name Strapi-ECS-App \
            --deployment-group-name Strapi-ECS-DG \
            --deployment-config-name CodeDeployDefault.ECSCanary10Percent5Minutes \
            --revision file://appspec.json
